# -*- coding: utf-8 -*-
"""REST API

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_PKheooXTTNJz4U1P1H5qS0YzuoWc-zY
"""

from pymongo.operations import InsertOne
from werkzeug.wrappers import response
from pymongo.collection import ReturnDocument
cursor
from flask import Flask, request, json,Response
from pymongo import MongoClient
import pandas as pd
class MongoAPI:

    def _init_(self, data):
        self.client = MongoClient("mongodb://localhost:27017/")  
      
        database = data['database']
        collected = data['collection']
        arrow = self.client[database]
        self.collection = arrow[collected]
        self.data = data
    def user_table(self, name , password ,role):
        self.Name = name
        self.password=password
        self.role=role

    def read(self):
        documents = self.collection.find()
        output = [{item: data[item] for item in data if item != '_id'} for data in documents]
        return output
    def write(self, data):
        log.info('Writing Data')
        my_document = data['Document']
        respond = self.collection.insert_one(my_document)
        output = {'Status': 'Successfully Inserted',
                  'Document_ID': str(respond.inserted_id)}
        return output
    def update(self):
        filt = self.data['Filter']
        new_data = {"$set": self.data['DataToBeUpdated']}
        respond = self.collection.update_one(filt, new_data)
        output = {'Status': 'Successfully Updated' if respond.modified_count > 0 else "Nothing was updated."}
        return output
    def delete(self, data):
        filt = data['Document']
        respond = self.collection.delete_one(filt)
        output = {'Status': 'Successfully Deleted' if respond.deleted_count > 0 else "Document not found."}
        return output
    def create_csv(self):
      documents = self.collection.find()
      result = [{item: data[item] for item in data if item != '_id'} for data in documents]
      d={"Name":result,"role":result,"passward":result}
      final=pd.csv(d)
      print(final)

